// apply plugin: 'java' としなくても，以下のようにまとめて書ける
apply {
  plugin 'java'
  plugin 'war'
  plugin 'jetty'
}

// jarファイルの名前
archivesBaseName = "sample-apps"
// javacのオプションに encoding=UTF-8 を追加する
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// Gralde標準外のソースパスを追加
sourceSets {
  main {
    java { srcDir 'src/java' }
  }
  test {
    java { srcDir 'src/test' }
  }
}

// Webリソースの場所（標準だと src/main/webapp）
webAppDirName = 'web'

// 依存ライブラリはローカルにあるJarファイルを直接参照
dependencies {
  providedRuntime fileTree(dir: 'lib/provided', include: '*.jar')
  compile fileTree(dir: 'lib/compile', include: '*.jar')
  testCompile fileTree(dir: 'lib/test', include: '*.jar')
}

// checkstyleとfindbugsの設定
apply {
  plugin 'checkstyle'
  plugin 'findbugs'
}

// mavenリポジトリからツールを取得せず，すでにあるツールを利用する
configurations {
  checkstyle
  findbugs
}
dependencies {
  checkstyle fileTree(dir: 'tool/checkstyle-5.1/', include: '*.jar')
  findbugs fileTree(dir: 'tool/findbugs-1.3.9/lib/', include: '*.jar')
}

// checkstyleの設定ファイルや実行時のオプションをそれぞれ設定する
checkstyleMain {
  configFile = file('tool/checkstyle-5.1/sun_checks.xml')
  ignoreFailures = true
}

checkstyleTest {
  configFile = file('tool/checkstyle-5.1/sun_checks.xml')
  ignoreFailures = true
}

findbugsMain {
  ignoreFailures = true
}

findbugsTest {
  ignoreFailures = true
}
